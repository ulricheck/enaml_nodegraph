from enaml_nodegraph import install
install()

from enaml.widgets.api import MainWindow, Container, Field
from enaml.layout.api import vbox, hbox, align, spacer, grid
from enaml.widgets.api import MenuBar, Menu, Action, ActionGroup

from enaml.widgets.ipython_console import IPythonConsole

from enaml_nodegraph.widgets.graphicsview import GraphicsView
from enaml_nodegraph.widgets.node_graphicsscene import NodeGraphicsScene
from enaml_nodegraph.widgets.node_item import NodeItem
from enaml_nodegraph.widgets.node_content import NodeContent
from enaml_nodegraph.widgets.node_socket import NodeSocket, SocketPosition, SocketType


enamldef TestNode1(NodeItem):
    name = "test node1"
    color_default = "#0000007F"
    color_selected = "#FFA637FF"
    color_title = "#AAAAAAFF"
    color_title_background = "#313131FF"
    color_background = "#212121E3"

    NodeSocket:
        index = 0
        socket_type = SocketType.INPUT
        socket_position = SocketPosition.LEFT_TOP
    NodeSocket:
        index = 1
        socket_type = SocketType.INPUT
        socket_position = SocketPosition.LEFT_TOP

    NodeSocket:
        index = 0
        socket_type = SocketType.OUTPUT
        socket_position = SocketPosition.RIGHT_BOTTOM
    NodeSocket:
        index = 1
        socket_type = SocketType.OUTPUT
        socket_position = SocketPosition.RIGHT_BOTTOM

    NodeContent:
        Container:
            padding = (0, 0, 0, 0)
            Field:
                text = "123"

enamldef TestNode2(NodeItem):
    name = "test node2"
    color_default = "#0000007F"
    color_selected = "#FFA637FF"
    color_title = "#AAAAAAFF"
    color_title_background = "#313131FF"
    color_background = "#212121E3"

    NodeSocket:
        index = 0
        socket_type = SocketType.INPUT
        socket_position = SocketPosition.LEFT_BOTTOM
    NodeSocket:
        index = 1
        socket_type = SocketType.INPUT
        socket_position = SocketPosition.LEFT_BOTTOM

    NodeSocket:
        index = 0
        socket_type = SocketType.OUTPUT
        socket_position = SocketPosition.RIGHT_TOP
    NodeSocket:
        index = 1
        socket_type = SocketType.OUTPUT
        socket_position = SocketPosition.RIGHT_TOP

    NodeContent:
        Container:
            padding = (0, 0, 0, 0)
            Field:
                text = "234"


enamldef Main(MainWindow): mainwindow:

    title = 'Nodegraph Test'

    MenuBar:
        Menu:
            title = '&File'
            Action:
                text = 'New File\tCtrl+N'
                triggered :: print('New File triggered')
            Action:
                text = 'Open File\tCtrl+O'
                triggered :: print('Open File triggered')
            Action:
                text = 'Save File\tCtrl+S'
                triggered :: print('Save File triggered')
            Action:
                text = 'Quit Editor\tCtrl+Q'
                triggered :: print('Quit Editor')
        Menu:
            title = '&Edit'
            Action:
                text = 'Undo\tCtrl+Z'
                triggered :: print('Undo triggered')
            Action:
                text = 'Redo\tCtrl+R'
                triggered :: print('Redo triggered')
            Menu:
                title = 'Undo Selection'
                Action:
                    text = 'Undo Insert\tCtrl+U'
                    triggered :: print('Undo Insert triggered')
                Action:
                    text = 'Redo Insert\tCtrl+Shift+U'
                    enabled = False
                    triggered :: print('Redo Insert triggered')
            Action:
                separator = True
            Action:
                text = 'Cut\tCtrl+X'
                triggered :: print("Cut triggered")
            Action:
                text = 'Copy\tCtrl+C'
                triggered :: print('Copy triggered')
            Action:
                text = 'Paste\tCtrl+V'
                triggered :: print('Paste triggered')
        Menu:
            title = '&Testing'
            Action:
                text = 'Add Node1\tCtrl+1'
                triggered :: print("Add Node1 triggered")
            Action:
                text = 'Add Node1\tCtrl+2'
                triggered :: print("Add Node2 triggered")


    Container: ngwin1:
        constraints = [
            hbox(view1, console)
        ]

        GraphicsView: view1:
            minimum_size = (640, 640)
            NodeGraphicsScene: scene:
                background = "#393939"
                color_light = "#2f2f2f"
                color_dark = "#292929"

                TestNode1: n1:
                    pass

                TestNode2: n2:
                    pass

        Container: console:
            padding = (0, 0, 0, 0)
            alias ipy
            constraints = [vbox(ipy, spacing=3)]

            IPythonConsole: ipy:
                minimum_size = (400,200)
                initial_ns = {"view": view1, "scene": scene}
